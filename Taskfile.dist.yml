version: "3"

vars:
  NAME: mirai
  WINDOWS_NAME: mirai.exe
  VERSION:
    sh: git describe --tags --always --long
  BUILD:
    sh: date +%F
  LDFLAGS: -s -w -X main.version={{.VERSION}} -X main.build={{.BUILD}}
  GOFLAGS: -ldflags '{{.LDFLAGS}}'
  DOCKER_REPO: cloudwindy
  DOCKER_NAME: mirai
  DOCKER_TAG: "{{.DOCKER_REPO}}/{{.DOCKER_NAME}}"

env:
  CGO_ENABLED: 1

tasks:
  run:
    desc: Run immediately.
    cmds:
      - go run {{.GOFLAGS}} .

  build:
    desc: Build for this platform.
    cmds:
      - go build -o '{{.NAME}}' {{.GOFLAGS}} .

  install:
    desc: Install on your system.
    cmds:
      - go install {{.GOFLAGS}} .

  windows:
    desc: Build with MinGW, targeting Windows x64.
    cmds:
      - go build -o '{{.WINDOWS_NAME}}' {{.GOFLAGS}}
    env:
      GOOS: windows
      GOARCH: amd64
      CC: x86_64-w64-mingw32-gcc

  tidy:
    desc: Create or tidy go vendor directory.
    cmds:
      - go mod tidy
      - go mod vendor

  clean:
    desc: Clean build cache and binary.
    cmds:
      - go clean
      - rm -f '{{.OUT}}'
      - rm -f '{{.OUT}}.exe'

  test:
    desc: Run all the tests.
    cmds:
      - go test .

  docker:
    desc: Build docker image for this architecture.
    summary: |
      This command can be used without a golang toolchain installed. Golang
      image will be used for building instead.
    cmds:
      - docker build --pull -t {{.DOCKER_TAG}} .
